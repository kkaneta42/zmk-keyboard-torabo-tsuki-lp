name: Build ZMK firmware (cached)

on: [push, pull_request, workflow_dispatch]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest

    # 事前にツールチェーン入りの公式イメージを使用（セットアップ時間を削減）
    container: zmkfirmware/zmk-build-arm:stable
    # もし Docker Hub が使えない場合の代替:
    # container: ghcr.io/zmkfirmware/zmk-build-arm:stable

    strategy:
      fail-fast: false
      matrix:
        include:
          # NOTE: board はあなたのMCUボードに合わせて変更可（例: nice_nano_v2 など）
          - board: bmp_boost
            shield: torabo_tsuki_lp_left
            snippet: studio-rpc-usb-uart
            cmake_args: ""
            artifact_name: torabo_tsuki_lp_left_peripheral
            build_dir: build/left

          - board: bmp_boost
            shield: torabo_tsuki_lp_right
            snippet: studio-rpc-usb-uart
            cmake_args: -DCONFIG_ZMK_SPLIT_ROLE_CENTRAL=y
            artifact_name: torabo_tsuki_lp_right_central
            build_dir: build/right

          - board: bmp_boost
            shield: settings_reset
            snippet: ""
            cmake_args: ""
            artifact_name: settings_reset
            build_dir: build/settings_reset

    env:
      ZMK_CONFIG: ${{ github.workspace }}/config
      CCACHE_DIR: ${{ github.workspace }}/.ccache
      CCACHE_COMPRESS: "1"
      CCACHE_MAXSIZE: "200M"

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Cache Zephyr & modules
        uses: actions/cache@v4
        with:
          path: |
            zephyr
            modules
            tools
            .west
            ~/.cache/zephyr
          # ユーザー設定の west manifest を鍵にして依存を安定キャッシュ
          key: ${{ runner.os }}-zephyr-${{ hashFiles('config/west.yml') }}
          restore-keys: |
            ${{ runner.os }}-zephyr-

      - name: Cache ccache
        uses: actions/cache@v4
        with:
          path: ${{ env.CCACHE_DIR }}
          key: ${{ runner.os }}-ccache-${{ matrix.board }}-${{ matrix.shield }}-${{ hashFiles('**/*.keymap','**/*.overlay','**/*.conf','config/west.yml') }}
          restore-keys: |
            ${{ runner.os }}-ccache-${{ matrix.board }}-${{ matrix.shield }}-
            ${{ runner.os }}-ccache-

      - name: Install west (if missing)
        run: |
          if ! command -v west >/dev/null 2>&1; then
            python3 -m pip install --user west
            echo "$HOME/.local/bin" >> $GITHUB_PATH
          fi

      - name: West init & update
        run: |
          west init -l config
          west update
          west zephyr-export

      - name: Build (${{ matrix.board }} + ${{ matrix.shield }})
        shell: bash
        run: |
          SNIPPET_OPT=""
          if [ -n "${{ matrix.snippet }}" ]; then
            SNIPPET_OPT="-DSNIPPET=${{ matrix.snippet }}"
          fi
          mkdir -p "${{ matrix.build_dir }}"
          west build -d "${{ matrix.build_dir }}" -s zmk/app -b "${{ matrix.board }}" -- \
            -DSHIELD="${{ matrix.shield }}" \
            ${SNIPPET_OPT} \
            -DZMK_CONFIG="${{ env.ZMK_CONFIG }}" \
            ${{ matrix.cmake_args }}

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.artifact_name }}
          path: |
            ${{ matrix.build_dir }}/zephyr/zmk.uf2
            ${{ matrix.build_dir }}/zephyr/zmk.hex
            ${{ matrix.build_dir }}/zephyr/zephyr.dts
            ${{ matrix.build_dir }}/zephyr/.config
          if-no-files-found: warn

      - name: Show build size
        if: always()
        run: |
          ls -lh "${{ matrix.build_dir }}/zephyr" | sed -n '1,50p'