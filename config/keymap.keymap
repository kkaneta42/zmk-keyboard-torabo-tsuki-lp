#include <input/processors.dtsi>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

/ {
    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_UP>, <&msc SCRL_DOWN>;
    };

    combos {
        compatible = "zmk,combos";

        tab {
            bindings = <&kp TAB>;
            key-positions = <25 26>;
            layers = <0>;
        };

        esc {
            bindings = <&kp ESCAPE>;
            key-positions = <13 14>;
            layers = <0>;
        };

        bt_clear {
            bindings = <&bt BT_NXT>;
            key-positions = <28 29 57>;
            layers = <2>;
        };

        minus {
            bindings = <&kp MINUS>;
            key-positions = <20 21>;
        };
    };

    behaviors {
    };

    keymap {
        compatible = "zmk,keymap";

        main {
            bindings = <
&trans  &trans        &trans            &trans    &trans         &trans                                                             &trans         &trans  &trans     &trans                &trans             &trans
&trans  &mt ESCAPE Q  &kp W             &kp E     &kp R          &kp T                                                              &kp Y          &kp U   &kp I      &kp O                 &kp P              &trans
&trans  &kp A         &kp S             &kp D     &kp F          &kp G                   &trans                  &trans             &kp H          &kp J   &kp K      &kp L                 &lt 3 MINUS        &trans
&trans  &lt 2 Z       &kp X             &kp C     &kp V          &kp B                   &kp LC(SPACE)           &mt SEMI COLON     &kp N          &kp M   &kp COMMA  &kp DOT               &mt QUESTION FSLH  &trans
&trans  &kp LS(TAB)   &kp LEFT_COMMAND  &kp LALT  &kp BACKSPACE  &mt LEFT_COMMAND SPACE  &mt LEFT_CONTROL ENTER  &kp RIGHT_COMMAND  &mt LSHFT TAB  &trans  &trans     &kp LG(LS(NUMBER_4))  &lt 4 LS(LG(N5))   &trans
            >;
        };

        mouse {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                  &trans    &trans    &trans    &trans    &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                  &trans    &trans    &trans    &trans    &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &mkp MB4  &mkp MB1  &mkp MB2  &mkp MB5  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans    &trans    &trans    &trans    &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans    &trans    &trans    &trans    &trans  &trans
            >;
        };

        layer_2 {
            bindings = <
&trans  &trans            &trans            &trans      &trans      &trans                         &trans      &trans      &trans      &trans      &trans      &trans
&trans  &kp LS(NUMBER_1)  &kp LS(NUMBER_2)  &kp LS(N3)  &kp LS(N4)  &kp LS(N5)                     &kp LS(N6)  &kp LS(N7)  &kp LS(N8)  &kp LS(N9)  &kp LS(N0)  &trans
&trans  &kp N1            &kp N2            &kp N3      &kp N4      &kp N5      &trans  &trans     &kp N6      &kp N7      &kp N8      &kp N9      &kp N0      &trans
&trans  &trans            &trans            &trans      &trans      &trans      &trans  &kp GRAVE  &kp LBKT    &kp RBKT    &kp BSLH    &kp APOS    &kp EQUAL   &trans
&trans  &trans            &trans            &trans      &trans      &trans      &trans  &trans     &trans      &trans      &trans      &trans      &trans      &trans
            >;
        };

        layer_3 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                  &trans     &trans      &trans                  &trans             &trans     &trans
&trans  &trans  &trans  &trans  &trans  &trans                  &kp LG(R)  &kp LG(W)   &kp LG(LA(LEFT_ARROW))  &kp LG(LA(RIGHT))  &kp LG(T)  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &kp LEFT   &kp DOWN    &kp UP                  &kp RIGHT          &trans     &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &kp N0     &kp DOLLAR  &kp MINUS               &kp PLUS           &trans     &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans     &trans      &trans                  &trans             &trans     &trans
            >;
        };

        layer_4 {
            bindings = <
&trans  &trans        &trans        &trans        &trans        &trans                        &trans  &trans  &trans   &trans   &trans          &trans
&trans  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                  &trans  &trans  &trans   &trans   &bt BT_CLR_ALL  &trans
&trans  &trans        &trans        &trans        &trans        &trans        &trans  &trans  &trans  &trans  &trans   &trans   &trans          &trans
&trans  &kp F1        &kp F2        &kp F3        &kp F4        &kp F5        &kp F6  &kp F7  &kp F8  &kp F9  &kp F10  &kp F11  &kp F12         &trans
&trans  &trans        &trans        &trans        &trans        &trans        &trans  &trans  &trans  &trans  &trans   &trans   &trans          &trans
            >;
        };
    };
};
